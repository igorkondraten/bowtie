@model BowTie.View.Models.AddEventViewModel

@{
    ViewBag.Title = "Редагування події";
}
@section Scripts{
    @Scripts.Render("~/Scripts/bootstrap-select.js")
    @Styles.Render("~/Content/bootstrap-select.css")
    <script>
        $(document).ready(function () {
            $('.selectpicker').selectpicker({
                liveSearch: true,
                showSubtext: true
            });
            $('#regionsPicker').on('changed.bs.select', function (e, clickedIndex, newValue, oldValue) {
                var selected = $(e.currentTarget).val();
                AjaxCall('/Events/GetDistricts', JSON.stringify({ "regionId": selected }), 'POST').done(function (response) {
                    if (response.length > 0) {
                        $("#districtsPicker").html('');
                        $("#citiesPicker").html('');
                        for (var i = 0; i < response.length; i++) {
                            var o = new Option(response[i].Text, response[i].Value);
                            $(o).html(response[i].Text);
                            $("#districtsPicker").append(o);
                        }
                        $("#districts").slideDown();
                        $("#districtsPicker").selectpicker('refresh');
                        $("#citiesPicker").selectpicker('refresh');
                    }
                }).fail(function (error) {
                    alert(error.StatusText);
                });
            });

            $('#districtsPicker').on('changed.bs.select', function (e, clickedIndex, newValue, oldValue) {
                var selected = $(e.currentTarget).val();
                AjaxCall('/Events/GetCities', JSON.stringify({ "districtId": selected }), 'POST').done(function (response) {
                    if (response.length > 0) {
                        $("#citiesPicker").html('');
                        for (var i = 0; i < response.length; i++) {
                            var o = new Option(response[i].Text, response[i].Value);
                            $(o).html(response[i].Text);
                            $("#citiesPicker").append(o);
                        }
                        $("#cities").slideDown();
                        $("#citiesPicker").selectpicker('refresh');
                    }
                }).fail(function (error) {
                    alert(error.StatusText);
                });
            });

            $.validator.methods.range = function (value, element, param) {
                if ($(element).attr('data-val-date')) {
                    var min = $(element).attr('data-val-range-min');
                    var max = $(element).attr('data-val-range-max');
                    var date = new Date(value).getTime();
                    var minDate = new Date(min).getTime();
                    var maxDate = new Date(max).getTime();
                    return this.optional(element) || (date >= minDate && date <= maxDate);
                }
                // use the default method
                return this.optional(element) || (value >= param[0] && value <= param[1]);
            };
        });
        function AjaxCall(url, data, type) {
            return $.ajax({
                url: url,
                type: type ? type : 'GET',
                data: data,
                contentType: 'application/json'
            });
        }
    </script>
}
<div class="container">
    <h2 style="text-align: center;">Редагування інформації про подію</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal text-center">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Guid)

            <div class="form-group">
                @Html.LabelFor(model => model.Name)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Date)
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RegionId)
                @Html.DropDownListFor(model => model.RegionId, Model.Regions, new
   {
       @class = "form-control selectpicker",
       @id = "regionsPicker",
       @data_size = "10",
       @title = "Виберіть область"
   })
                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group" id="districts">
                @Html.LabelFor(model => model.DistrictId)
                @Html.DropDownListFor(model => model.DistrictId, Model.Districts, new
   {
       @class = "form-control selectpicker",
       @id = "districtsPicker",
       @data_size = "10",
       @title = "Виберіть район"
   })
                @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group" id="cities"
                 @if (!Model.DistrictId.HasValue) { @: style="display: none;"
                 }>
                @Html.LabelFor(model => model.CityId)
                @Html.DropDownListFor(model => model.CityId, Model.Cities, new
   {
       @class = "form-control selectpicker",
       @id = "citiesPicker",
       @data_size = "10",
       @title = "Виберіть населений пункт"
   })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EventTypeCode)
                @Html.DropDownListFor(model => model.EventTypeCode, Model.EventTypes, new
   {
       @class = "form-control selectpicker",
       @data_size = "10",
       @Value = "Надзвичайні події",
   })
                @Html.ValidationMessageFor(model => model.EventTypeCode, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Info)
                @Html.EditorFor(model => model.Info, new { htmlAttributes = new { @class = "form-control", @rows = 12 } })
                @Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
            </div>

            <div class="form-row text-center">
                <div class="col-12">
                    <input type="submit" value="Зберегти" class="btn btn-success" />
                </div>
            </div>
        </div>

    }
</div>